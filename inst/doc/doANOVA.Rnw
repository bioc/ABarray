%\VignetteIndexEntry{ABarray gene expression ANOVA analysis}
%\VignetteKeywords{Applied Biosystems AB1700}
%\VignetteDepends{ABarray}
%\VignettePackage{ABarray}

\documentclass[10pt]{article}

\title{AB1700 Microarray ANOVA Analysis}
\author{
        Yongming Andrew Sun, Applied Biosystems
        \\
		  sunya@appliedbiosystems.com
}

\usepackage{Sweave}
\usepackage{graphicx}
\usepackage{fancyhdr}

\newcommand{\Rpackage}[1]{\textit{#1}}
\newcommand{\Rfunction}[1]{\textit{#1}}
\newcommand{\Robject}[1]{\texttt{#1}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\textit{#1}}}
\newcommand{\Rfunarg}[1]{{\textit{#1}}}

\oddsidemargin  -0.2in
\evensidemargin 0.0in
\textwidth      6.9in
\topmargin      -0.75in
\textheight     9.25in

\pagestyle{fancy}
\rhead{AB1700 ANOVA Analysis}
\rfoot{ABarray package}

\begin{document}

\maketitle

\section{ABarray Package Introduction}
The package \Rpackage(ABarray) is designed to work with Applied Biosystems
whole genome microarray platform, as well as any other platform whose data
can be tranformed into expression data matrix. In the following functions
described, items 1 and 2 are specific to AB1700 datasets. Items 3 to 9
can be applied to any datasets. However, for AB1700 data, filtering is
performed using S/N ratio threshold (default = 3), while filtering is not
applied to other data.

The package \Rpackage(ABarray) will perform the following functions:
\begin{enumerate}
\item
Read output from AB1700 software output (AB1700 specific)
\item
Perform analysis on hybridization control spike-ins (AB1700 specific)
\item
Perform raw data QA and associated plots (see \Rfunction{doPlotEset}) including:
\begin{itemize}
\item boxplot for signal distrubution range
\item MA plot for signal distribution and signal variability
\item CV plot for variation among hybridization replicates
\item Scatter plot for correlation between hybridization arrays
\item Correlation heatmap for visualization
\item S/N detection concordance
\end{itemize}
\item
Perform quantile normalization
\item
Repeat data QA after normalization. See \Rfunction{doPlotEset}
\item
Perform t test, and ANOVA and produce graphics to visualize t test results.
See \Rfunction{doPlotFCT}
\item
Peform LPE for low number of replicates. See \Rfunction{doLPE} 
for more details
\item
For more details on ANOVA analysis, see \Rfunction{doANOVA}
\item
For drawing Venn diagram, see \Rfunction{doVennDiagram}
\end{enumerate}

\section{ANOVA analysis}
The function \Rfunction{doANOVA} in package \Rpackage{ABarray} is designed
to perform one way or two way ANOVA analysis. If only one factor is provided 
in parameter, one way ANOVA is performed. If two factors are provided, 
two way ANOVA is performed. 

The S/N ratio will be used to perform filtering. If a probe is detected
(S/N >= 3, default value) in 50\% (default value) or more samples within
any subgroups, it is included in the ANOVA analysis. If a probe is not
detected in 50\% or more samples in all the subgroups, it is removed
from ANOVA analysis.

\section{Required Data Object}
The function \Rfunction{doANOVA} works on either an \Rclass{exprSet} object
or expression \Robject{matrix}. If \Rclass{exprSet} object is used, experiment
design information should be already in the \Rclass{exprSet} object. If
expression matrix is used, rows of the matrix should be probes or genes,
and columns of the matrix should be hybridization (or arrays).

\begin{itemize}
\item \Robject{exprSet} object. The object can be generated from function
\Rfunction{ABarray} in package \Rpackage{ABarray}. For additional information
about functionality of \Rfunction{ABarray}, refer to document from
\Rfunction{ABarray}. The object can also be generated from other packages
in \Rpackage{Bioconductor} project. See www.bioconductor.org for more
information about other packages.
\item factor1. Factor name that the ANOVA test will be performed on. 
If \Robject{exprSet} object is used, either name or labels can be used. The name 
should be present in experiment design informaton in \Robject{exprSet} object.
Function \Rfunction{ABarray} in package \Rpackage{ABarray} automatically creates
such information if appropriate experiment design file is used when function
\Rfunction{ABarray} was run. If expression matrix is to be used, \Robject{lables}
should be used. A \Robject{label} is a vector which labels each hybridization
(or array) into groups. For example, a \Robject{label} <- c('drug1', 'drug1',
'drug2', 'drug2', 'none', 'none') indicates samples for arrays 1 and 2 were 
treated with drug1, and samples for arrays 5 and 6 were not treated.
\item optional factor2. If the second factor is provided, two way ANOVA will 
be performed.
\end{itemize}

\section{doANOVA Analysis Output}
If one way ANOVA is performed, a vector with ANOVA p values will be returned.
The names of the vector are probeIDs. If two way ANOVA is performed, a matrix
will be returned. The rows of the matrix are probeIDs and the columns are
the levels of factors and interactions of the levels.

The ANOVA results will be saved into file automatically.

\section{doANOVA Function Demonstration}

\subsection{Required Data}
First let's see what the \Robject{eset} contains
\begin{Schunk}
\begin{Sinput}
> eset
\end{Sinput}
\begin{Soutput}
Expression Set (exprSet) with 
	33096 genes
	12 samples
		 phenoData object with 6 variables and 12 cases
	 varLabels
		sampleName: read from file
		assayName: read from file
		arrayName: read from file
		pool: read from file
		IVT: read from file
		multIVT: read from file
\end{Soutput}
\end{Schunk}

Let's check the experiment design and pick factors for testing
\begin{Schunk}
\begin{Sinput}
> pData(eset)
\end{Sinput}
\begin{Soutput}
   sampleName    assayName arrayName  pool  IVT multIVT
1     EL_1A_1 HA004J2_1A_1   HA004J2 pool1 IVT1    IVT1
2     EL_1A_2 HA004J7_1A_2   HA004J7 pool1 IVT1    IVT1
3     EL_1A_3 HA004JB_1A_3   HA004JB pool1 IVT1    IVT1
4     EL_1B_1 HA004JD_1B_1   HA004JD pool1 IVT2    IVT2
5     EL_1B_2 HA004JI_1B_2   HA004JI pool1 IVT2    IVT2
6     EL_1B_3 HA004JK_1B_3   HA004JK pool1 IVT2    IVT2
7     EL_2A_1 HA004JN_2A_1   HA004JN pool2 IVT1    IVT3
8     EL_2A_2 HA004JO_2A_2   HA004JO pool2 IVT1    IVT3
9     EL_2A_3 HA004JP_2A_3   HA004JP pool2 IVT1    IVT3
10    EL_2B_1 HA004JS_2B_1   HA004JS pool2 IVT2    IVT4
11    EL_2B_2 HA004JT_2B_2   HA004JT pool2 IVT2    IVT4
12    EL_2B_3 HA004JU_2B_3   HA004JU pool2 IVT2    IVT4
\end{Soutput}
\end{Schunk}

\subsection{One Way ANOVA}
Let's begin to perform the analysis. Here we take a subset of probes (the
first 20 probes) to perform the ANOVA. We chose \Robject{multIVT}, since
it has 4 levels: IVT1, IVT2, IVT3, IVT4.
\begin{Schunk}
\begin{Sinput}
> aResult <- doANOVA(eset[1:20, ], "multIVT")
\end{Sinput}
\begin{Soutput}
Performing one-way ANOVA for multIVT ...
    Probes with S/N < 3 in at least 50% of samples in all subgroups of multIVT were not considered.
[1] "One-way ANOVA results (9 probes) were written to file: 
     Result_multIVT/DataResult/ANOVA_oneway_multIVT.csv"
\end{Soutput}
\end{Schunk}

The results of this ANOVA analysis were saved into a file called 
\Robject{ANOVA\_oneway\_multIVT.txt}.

Since we chose to perform one way ANOVA, \Robject{aResult} should be
a vector of length 20 (we only used 20 probes).
\begin{Schunk}
\begin{Sinput}
> aResult
\end{Sinput}
\begin{Soutput}
      100002       100037       100039       100058 
1.620190e-03 5.705200e-03 1.009991e-03 9.374965e-05 
      100060       100079       100089       100027 
1.016003e-01 5.021948e-06 1.462993e-04 1.652952e-01 
      100052 
5.952003e-01 
\end{Soutput}
\end{Schunk}

To save the results into file, we use R \Rfunction{write.table} function.
It takes an object whos data need to be written to file. Here our object
is \Robject{aResult}. A file argument (i.e., the name of the file). In
the following command, \Rfunarg{sep = ``,''} tells it to save the file as
comma delimit format. Argument \Rfunarg{row.names = TRUE} tells it to
write probeID into file as well.
\begin{Schunk}
\begin{Sinput}
> write.table(aResult, file = "multIVT_oneWay_ANOVA.csv", 
+     sep = ",", row.names = TRUE)
\end{Sinput}
\end{Schunk}

You can check the content of the file. The first column is probeID, the
second column is p values from one way ANOVA analysis.


\subsection{Two Way ANOVA}
Let's perform two way ANOVA. Here we pass 2 factors ('pool' and 'IVT'), 
and as before we will use only 20 probes for demonstration purpose.
\begin{Schunk}
\begin{Sinput}
> bResult <- doANOVA(eset[1:20, ], "pool", "IVT")
\end{Sinput}
\begin{Soutput}
Performing two-way ANOVA for pool and IVT ...
    Probes with S/N < 3 in at least 50% of samples in all subgroups of pool and IVT were not considered.
[1] "Two-way ANOVA results (8 probes) were written to file: Result_pool_IVT/ANOVA_pool_IVT.csv"
\end{Soutput}
\end{Schunk}

The results of the ANOVA analysis were saved into file 
\Robject{ANOVA\_pool\_IVT.txt}.

Let's check if the \Robject{bResult} is a matrix
\begin{Schunk}
\begin{Sinput}
> dim(bResult)
\end{Sinput}
\begin{Soutput}
[1] 8 3
\end{Soutput}
\end{Schunk}

Let's get the p values for the two way ANOVA
\begin{Schunk}
\begin{Sinput}
> bResult
\end{Sinput}
\begin{Soutput}
            p(pool)      p(IVT)  p(pool*IVT)
100002 4.215936e-03 0.002562953 3.098940e-02
100037 1.116917e-02 0.156183104 5.328180e-03
100039 5.423037e-04 0.173732795 5.336480e-03
100058 6.514385e-04 0.009500397 8.888504e-05
100060 7.294050e-01 0.051155428 1.058891e-01
100079 3.244984e-05 0.001540973 5.688470e-06
100089 6.787365e-04 0.961322381 8.243031e-05
100052 7.863245e-01 0.206235388 8.623153e-01
\end{Soutput}
\end{Schunk}

To save the result to file, we can use the following command
\begin{Schunk}
\begin{Sinput}
> write.table(bResult, file = "pool_IVT_twoway_ANOVA.csv", 
+     sep = ",", row.names = TRUE, col.names = NA)
\end{Sinput}
\end{Schunk}

\end{document}
